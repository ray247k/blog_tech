<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Byte Ebi 🍤</title>
    <link>https://tech.ray247k.com/tags/devops/</link>
    <description>Recent content in DevOps on Byte Ebi 🍤</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Thu, 30 Jun 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tech.ray247k.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 GCP 上建立 Redis 服務</title>
      <link>https://tech.ray247k.com/blog/202206-gcp-redis/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202206-gcp-redis/</guid>
      <description>&lt;p&gt;GCP 提供 Google Cloud MemoryStore 服務可用來建立 Redis 或是 Memcached 快取機器服務&lt;br&gt;&#xA;價錢跟開 Database 差不多，原本以為跟 VM 一樣便宜&lt;/p&gt;</description>
    </item>
    <item>
      <title>讓你的電腦暫時公開在網路上 - Ngrok</title>
      <link>https://tech.ray247k.com/blog/202204-ngrok/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202204-ngrok/</guid>
      <description>&lt;p&gt;在開發上有常常會遇到，想要在本機測試但是串接的服務或是 webhook 需要有一個公開的網址作為 callback&lt;br&gt;&#xA;還都要求要有 https 的認證！&lt;br&gt;&#xA;這種時候除了真的去開一台雲端主機外還有沒有其他選擇呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins 04 在流程中使用 SSH 指令操作 GCP 上另一台執行個體</title>
      <link>https://tech.ray247k.com/blog/202204-jenkins-cicd-4-ssh-remote-server/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202204-jenkins-cicd-4-ssh-remote-server/</guid>
      <description>&lt;p&gt;在沒有自動化部屬的情境下，每次都需要手動連線到伺服器主機內部&lt;br&gt;&#xA;透過下指令或是執行將部署指令的執行檔，不僅麻煩且有人為失誤的風險&lt;br&gt;&#xA;透過 Jenkins 的 pipeline 來取代人工執行，部署就變得輕鬆又愜意&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins 03 打包 Docker image 並推送到 GCR</title>
      <link>https://tech.ray247k.com/blog/202204-jenkins-cicd-3-push-docker-image-to-gcr/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202204-jenkins-cicd-3-push-docker-image-to-gcr/</guid>
      <description>&lt;p&gt;Google Container Registry 是 Google 提供用來儲存、管理和保護 Docker 容器映像檔的服務&lt;br&gt;&#xA;這次要做的事是打包 Docker image，再透過 gcloud 指令推送到 GCP 以便未來部署主機時使用&lt;/p&gt;</description>
    </item>
    <item>
      <title>伸縮自在的伺服器 02 負載平衡 Load Balancing</title>
      <link>https://tech.ray247k.com/blog/202204-gcp-load-balancing/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202204-gcp-load-balancing/</guid>
      <description>&lt;p&gt;在前一篇&lt;a href=&#34;https://tech.ray247k.com/blog/202203-gcp-auto-scaling/&#34;&#xA;   &#xA;   &gt;伸縮自在的伺服器 01 自動配置 Auto Scaling&#xA;&lt;/a&gt;&#xA;中有提到&lt;br&gt;&#xA;我們需要設定一組 Load Balancer 對網際網路的請求分流到不同伺服器主機處理&lt;br&gt;&#xA;這樣可以根據流量彈性調整主機數量，並維持服務穩定運作&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins 02 基本 pipeline 建置及串接 Github</title>
      <link>https://tech.ray247k.com/blog/202203-jenkins-cicd-2-basic-pipeline/</link>
      <pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202203-jenkins-cicd-2-basic-pipeline/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;https://www.jenkins.io/&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jenkins&#xA;&lt;/a&gt;&#xA; 中的建置流程也叫做 pipeline，也可以透過 webhook 觸發建置&lt;br&gt;&#xA;一樣有各種觸發方式和執行方式，底下示範串接 Github webhook 和常見觸發條件範例&lt;/p&gt;</description>
    </item>
    <item>
      <title>伸縮自在的伺服器 01 自動配置 Auto Scaling</title>
      <link>https://tech.ray247k.com/blog/202203-gcp-auto-scaling/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202203-gcp-auto-scaling/</guid>
      <description>建立映像檔 首先要把指定的 VM 停止&#xA;接著在側邊欄找到儲存空間-&amp;gt;映像檔點進去選擇建立映像檔&#xA;不要選成虛擬機器-&amp;gt;機器映像檔不然等等就會鬼打牆選不到！&#xA;一開始自作聰明從 VM 那邊按建立機器映像檔就被送到這個異世界，卡了一下午&#xA;最簡單的判斷方式就是第一步的 VM 不要停止&#xA;建立映像檔的時候如果沒有提醒你要停止就是錯的&#xA;照著提示把映像檔建立完成就可以進行下一步&#xA;建立執行個體範本 Instance templates 進入執行個體範本按下建立執行個體範本&#xA;硬體規則選擇 這邊是決定未來在執行個體群組內，每次啟動新的執行個體所需要的規格&#xA;所以設定的畫面長得跟在建立 VM 的時候的畫面很像&#xA;底下也有防火牆，如果是會用到 80 跟 443 port 的網路服務會就開起來&#xA;選擇 VM 映像檔作為開機範本 不同的是這次我們要用剛剛建立過的映像檔作為範本！&#xA;所以在開機磁碟的地方按下變更-&amp;gt;自訂映像檔並選擇剛剛建立的映像檔&#xA;啟動時自動執行指令 有些時候我們在新的 VM 啟動時需要運行一些指令把服務開啟，例如 docker&#xA;如果沒有再啟動時運行，你的 VM 就只是開了一台機器起來而不會運行 docker daemon&#xA;點開管理的摺疊內容，可以看到自動化的說明&#xA;您可以指定會在執行個體開機或重新啟動時執行的開機指令碼。開機指令碼可用來安裝軟體和更新項目，以及確保服務可在虛擬機器中順利運作&#xA;所以我們在區塊中加入指令，讓 VM 在使用範本啟動時將服務啟動&#xA;#! /bin/bash sudo systemctl start docker sudo docker start laravel-app nginx redis sudo docker exec -i laravel-app /var/www/html/artisan migrate sudo docker exec -i laravel-app /var/www/html/artisan l5-swagger:generate --all sudo docker exec -i laravel-app /usr/bin/supervisord -c .</description>
    </item>
    <item>
      <title>Jenkins 01 安裝</title>
      <link>https://tech.ray247k.com/blog/202203-jenkins-cicd-1-installation/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202203-jenkins-cicd-1-installation/</guid>
      <description>&lt;p&gt;使用 &lt;a href=&#34;https://www.jenkins.io/&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Jenkins&#xA;&lt;/a&gt;&#xA; 建立自己的自動部署服務&lt;br&gt;&#xA;Jenkins 是一套以 Java 開發的一套 CI/CD 系統工具&lt;br&gt;&#xA;之前介紹過 &lt;a href=&#34;https://tech.ray247k.com/tags/drone/&#34;&#xA;   &#xA;   &gt;Drone&#xA;&lt;/a&gt;&#xA;，於是這次就來摸摸 Jenkins 了&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 ssh 從本機連線到 GCP VM</title>
      <link>https://tech.ray247k.com/blog/202202-connect-to-gcp-vm-using-ssh/</link>
      <pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202202-connect-to-gcp-vm-using-ssh/</guid>
      <description>&lt;p&gt;原先在 GCP 開啟 VM 後每當管理主機時都要先開啟 GCP 控制台頁面，找到指定主機&lt;br&gt;&#xA;按下畫面上的 SSH 連線按鈕，接著開啟 GCP 的終端機畫面&lt;br&gt;&#xA;開啟的步驟實在繁瑣，而且那個終端機也沒有自己本機的用的習慣&lt;br&gt;&#xA;這篇文章說明如何透過本機終端機 ssh 連線到 GCP 主機內&lt;/p&gt;</description>
    </item>
    <item>
      <title>第一次在 GCP 開 VM 就成功</title>
      <link>https://tech.ray247k.com/blog/202201-gcp-vm-basic/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202201-gcp-vm-basic/</guid>
      <description>&lt;p&gt;如何在 Google Cloud Platform (GCP) 上開啟一個 VM 虛擬主機呢？&lt;br&gt;&#xA;聽起來很複雜，實際做起來十分簡單&lt;br&gt;&#xA;過去沒有開主機的經驗，這次就把步驟給記錄下來&lt;br&gt;&#xA;&lt;del&gt;我不想花錢自己開，以前公司也沒開權限給我過&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>用 Docker 建立 Laravel 開發環境</title>
      <link>https://tech.ray247k.com/blog/202107-laravel-environment-with-docker/</link>
      <pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202107-laravel-environment-with-docker/</guid>
      <description>&lt;p&gt;過去在本機開發 Laravel 專案，多數是直接在本機安裝所需要服務&lt;br&gt;&#xA;而後來改以虛擬機為主，曾經官方文件推薦開發環境的 &lt;a href=&#34;https://github.com/laravel/homestead&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Homestead&#xA;&lt;/a&gt;&#xA; 是很多人第一次使用的環境&lt;/p&gt;</description>
    </item>
    <item>
      <title>環境初始化主機設定(Docker &#43; Laravel)</title>
      <link>https://tech.ray247k.com/blog/202107-initialize-server-setting-with-docker-and-laravel/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202107-initialize-server-setting-with-docker-and-laravel/</guid>
      <description>&lt;p&gt;如果今天開啟一台全新的雲端主機，要在上面使用 Docker 建立 Laravel 開發環境&lt;br&gt;&#xA;並且可以在遠端主機執行 Laravel 常用的 composer 與 artisan 指令&lt;/p&gt;</description>
    </item>
    <item>
      <title>[用 Drone 建立自動部署] 04 drone runner 介紹</title>
      <link>https://tech.ray247k.com/blog/202107-drone-cicd-4-advanced-runner/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202107-drone-cicd-4-advanced-runner/</guid>
      <description>&lt;p&gt;我們在 &lt;a href=&#34;https://tech.ray247k.com/blog/202106-drone-cicd-1-basic-usage/&#34;&#xA;   &#xA;   &gt;[用 Drone 建立自動部署] 01 基本服務建置及串接 GitHub&#xA;&lt;/a&gt;&#xA; 文章中有 &lt;code&gt;docker-compose.yml&lt;/code&gt; 的範例&lt;br&gt;&#xA;在範例中建立了兩個 docker runner，分別是 &lt;code&gt;drone_runner_docker&lt;/code&gt; 和 &lt;code&gt;drone-runner-ssh&lt;/code&gt;&lt;br&gt;&#xA;而在 &lt;a href=&#34;https://tech.ray247k.com/blog/202106-drone-cicd-2-advanced-pipeline-configuration/&#34;&#xA;   &#xA;   &gt;[用 Drone 建立自動部署] 02 部署觸發條件(pipeline)設定&#xA;&lt;/a&gt;&#xA; 中使用到的其實只有 docker runner&lt;br&gt;&#xA;這篇文章來分別介紹兩個 runner，以及官方網站上提到的其他 runner&lt;/p&gt;</description>
    </item>
    <item>
      <title>[用 Drone 建立自動部署] 03 部署排程設定與權限管理</title>
      <link>https://tech.ray247k.com/blog/202106-drone-cicd-3-advanced-cron-job/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202106-drone-cicd-3-advanced-cron-job/</guid>
      <description>&lt;p&gt;使用 &lt;a href=&#34;https://www.drone.io/&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Drone&#xA;&lt;/a&gt;&#xA; 建立自己的自動部署服務&lt;br&gt;&#xA;Drone 是一套以 Golang 開發的一套 CI/CD 系統工具&lt;br&gt;&#xA;本篇進行部署排程設定與權限管理的教學&lt;/p&gt;</description>
    </item>
    <item>
      <title>[用 Drone 建立自動部署] 02 部署觸發條件(pipeline)設定</title>
      <link>https://tech.ray247k.com/blog/202106-drone-cicd-2-advanced-pipeline-configuration/</link>
      <pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202106-drone-cicd-2-advanced-pipeline-configuration/</guid>
      <description>&lt;p&gt;使用 &lt;a href=&#34;https://www.drone.io/&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Drone&#xA;&lt;/a&gt;&#xA; 建立自己的自動部署服務&lt;br&gt;&#xA;Drone 是一套以 Golang 開發的一套 CI/CD 系統工具&lt;br&gt;&#xA;本篇進行複數觸發條件設定，在不同觸發條件下觸發不同的部署步驟設定&lt;/p&gt;</description>
    </item>
    <item>
      <title>[用 Drone 建立自動部署] 01 基本服務建置及串接 GitHub</title>
      <link>https://tech.ray247k.com/blog/202106-drone-cicd-1-basic-usage/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202106-drone-cicd-1-basic-usage/</guid>
      <description>&lt;p&gt;使用 &lt;a href=&#34;https://www.drone.io/&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Drone&#xA;&lt;/a&gt;&#xA; 建立自己的自動部署服務&lt;br&gt;&#xA;Drone 是一套以 Golang 開發的一套 CI/CD 系統工具&lt;br&gt;&#xA;本篇進行基礎服務啟動設定，以及串接 GitHub&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 常用指令</title>
      <link>https://tech.ray247k.com/blog/202106-docker-common-commands/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202106-docker-common-commands/</guid>
      <description>&lt;p&gt;一些 Docker 上常用的指令和相關參數使用方法&lt;br&gt;&#xA;實際使用上一定不只這些指令&lt;/p&gt;</description>
    </item>
    <item>
      <title>伺服器壓力測試 - 使用 Apache Bench</title>
      <link>https://tech.ray247k.com/blog/202105-web-server-stress-testing/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202105-web-server-stress-testing/</guid>
      <description>&lt;p&gt;伺服器壓力測試，上線前一定要要做，不做不行！你們想想&lt;br&gt;&#xA;你加班幾個月、系統上了線，吃著火鍋還唱著歌，突然主機就被流量灌倒了！&lt;br&gt;&#xA;所以，有事先壓測的系統，才是好系統！&lt;/p&gt;</description>
    </item>
    <item>
      <title>設定 ssh 金鑰登入遠端主機</title>
      <link>https://tech.ray247k.com/blog/202104-use-ssh-key-login-remote-server/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202104-use-ssh-key-login-remote-server/</guid>
      <description>&lt;p&gt;一般登入伺服器是使用帳號與密碼進行登入，但是密碼可能會因為抄錄或是傳遞給人而外洩&lt;br&gt;&#xA;安全性的程度會比較沒有像SSH key 那麼安全，而且使用SSH key 登入可以就不用每次手動輸入密碼&lt;/p&gt;</description>
    </item>
    <item>
      <title>雲端主機啟動 Docker 服務</title>
      <link>https://tech.ray247k.com/blog/202103-enable-docker-service-in-remote-server/</link>
      <pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202103-enable-docker-service-in-remote-server/</guid>
      <description>&lt;p&gt;新開主機啟用 docker 與 docker-compose 服務的操作步驟&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL 資料庫建置 - 使用 Docker</title>
      <link>https://tech.ray247k.com/blog/202103-setting-up-postgresql-database-with-docker/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202103-setting-up-postgresql-database-with-docker/</guid>
      <description>&lt;p&gt;使用 Docker 來建置一個 PostgreSQL 資料庫&lt;br&gt;&#xA;包含 &lt;code&gt;資料庫建置&lt;/code&gt;、&lt;code&gt;資料持久化&lt;/code&gt;、&lt;code&gt;使用 GUI 操作資料庫&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>反向代理 - 在 Docker 環境建置</title>
      <link>https://tech.ray247k.com/blog/202102-reverse-proxy-in-docker-service/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202102-reverse-proxy-in-docker-service/</guid>
      <description>&lt;p&gt;反向代理的基本說明，以及在 Docker 容器環境中如何建置反向代理&lt;/p&gt;</description>
    </item>
    <item>
      <title>Laravel 執行環境建置</title>
      <link>https://tech.ray247k.com/blog/202102-laravel-environment-basic-settings/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202102-laravel-environment-basic-settings/</guid>
      <description>&lt;p&gt;開發 Laravel 專案所需要做的設定與套件安裝，不論是在遠端主機或是本機都適用&lt;/p&gt;</description>
    </item>
    <item>
      <title>Portainer - 視覺化管理 Docker 的工具</title>
      <link>https://tech.ray247k.com/blog/202101-portainer-open-source-container-management-gui/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202101-portainer-open-source-container-management-gui/</guid>
      <description>&lt;p&gt;本機開發大部分使用指令操作，或是使用 Docker 本身的 GUI 介面管理服務&lt;br&gt;&#xA;&lt;a href=&#34;https://github.com/portainer&#34;&#xA;   &#xA;    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;Portainer&#xA;&lt;/a&gt;&#xA; 是一個 open-source 的 UI tool&lt;br&gt;&#xA;可以查看 docker image, container，並執行 start, stop, restart, remove 等動作&lt;br&gt;&#xA;也可查看每個 container 的 log 及 error&lt;br&gt;&#xA;在雲端主機上啟動服務的話，即使沒有 Docker 執行權限的人也可以透過帳號密碼登入&lt;br&gt;&#xA;使用視覺化的介面進行 Docker 服務的各種管理&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 筆記 3 - docker-compose</title>
      <link>https://tech.ray247k.com/blog/202101-docker-note-3-introduce-docker-compose/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202101-docker-note-3-introduce-docker-compose/</guid>
      <description>&lt;p&gt;如果同時要管理彼此是有關連的多個 docker 容器，單純使用 docker 指令必須要自行記得容器之間的關聯&lt;br&gt;&#xA;而使用 docker-compose，則可以輕鬆定義多容器服務&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 筆記 2 - 基本使用</title>
      <link>https://tech.ray247k.com/blog/202101-docker-note-2-basic-usage/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202101-docker-note-2-basic-usage/</guid>
      <description>&lt;p&gt;容器化可以隔離不同環境，將環境打包後工程師可以專注開發，不用花過多心力在開發環境安裝上&lt;br&gt;&#xA;而 Docker 是目前非常成熟且流行的一個容器化技術&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 筆記 1 - 認識 Docker</title>
      <link>https://tech.ray247k.com/blog/202101-docker-note-1-what-is-docker/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/blog/202101-docker-note-1-what-is-docker/</guid>
      <description>&lt;p&gt;容器化可以隔離不同環境，將環境打包後工程師可以專注開發，不用花過多心力在開發環境安裝上&lt;br&gt;&#xA;而 Docker 是目前非常成熟且流行的一個容器化技術&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

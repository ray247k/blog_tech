<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Byte Ebi üç§</title>
    <link>https://tech.ray247k.com/en/categories/golang/</link>
    <description>Recent content in Golang on Byte Ebi üç§</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Jun 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tech.ray247k.com/en/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Different between pointer and value for struct type in golang</title>
      <link>https://tech.ray247k.com/en/blog/202306-different-between-pointer-and-value-for-struct-type-in-golang/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/en/blog/202306-different-between-pointer-and-value-for-struct-type-in-golang/</guid>
      <description>&lt;p&gt;I always had a question &amp;ldquo;Should I use value for type in struct? Or using pointer?&amp;rdquo;&lt;br&gt;
After reading many different projects on the web, it seems that they all have different practices.&lt;br&gt;
Until I recently encountered a problem that gave me some ideas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interacting with smart contracts using Golang</title>
      <link>https://tech.ray247k.com/en/blog/202207-go-ethereum-abigen/</link>
      <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/en/blog/202207-go-ethereum-abigen/</guid>
      <description>&lt;p&gt;Previously, I was calling Smart Contracts through PHP, which raised two issues.&lt;br&gt;
One was the slowness, and the other was the lack of maintenance of the package.&lt;br&gt;
Fortunately, Golang provides an official package that is both fast and solves these two problems.&lt;br&gt;
This article explains how to convert existing Smart Contract ABIs into a Go package for interacting with contracts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[A Tour of Go Study Notes] 03 Flow Control</title>
      <link>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-03-flow-control-statements/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-03-flow-control-statements/</guid>
      <description>&lt;p&gt;Entering the world of Golang, we first use the official tutorial: &lt;a href=&#34;https://tour.golang.org/welcome/1&#34;
   
    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;A Tour of Go
&lt;/a&gt;
 to learn the basics of using Golang.&lt;br&gt;
This article is a note on flow control, explaining some concepts like if, else, for, switch, and defer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[A Tour of Go Study Notes] 02 Variables and Types</title>
      <link>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-02-variables-and-types/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-02-variables-and-types/</guid>
      <description>&lt;p&gt;Entering the world of Golang, we first use the official tutorial: &lt;a href=&#34;https://tour.golang.org/welcome/1&#34;
   
    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;A Tour of Go
&lt;/a&gt;
 to learn the basics of using Golang.&lt;br&gt;
This article is a note on variables and types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[A Tour of Go Study Notes] 01 Packages and Functions</title>
      <link>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-01-packages-and-functions/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://tech.ray247k.com/en/blog/202111-a-tour-of-go-01-packages-and-functions/</guid>
      <description>&lt;p&gt;Entering the world of Golang for beginners, we start with the basics of Golang using the official tutorial: &lt;a href=&#34;https://tour.golang.org/welcome/1&#34;
   
    target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;A Tour of Go
&lt;/a&gt;
.&lt;br&gt;
This piece covers the fundamental aspects of basic packages and functions in Golang.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
